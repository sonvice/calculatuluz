---
const apiUrl = new URL('/api/prices', import.meta.env.SITE);
const res = await fetch(apiUrl);
const data = await res.json();

// Validamos que 'prices' sea un array; si no, se asigna un array vacío.
const prices = Array.isArray(data.prices) ? data.prices : [];
// Aseguramos que lastUpdated sea una fecha válida
const lastUpdated = data.lastUpdated ? new Date(data.lastUpdated) : new Date();
---

<section class="hourly-prices">
  <h2>Precio del kWh por horas</h2>
  <p><strong>Última actualización:</strong> {lastUpdated.toLocaleString('es-ES')}</p>
  <table>
    <thead>
      <tr>
        <th>Intervalo</th>
        <th>Precio (€/kWh)</th>
        <th>Categoría</th>
      </tr>
    </thead>
    <tbody>
      {prices.map(item => (
        <tr>
          <td>{item.hour}</td>
          <td>{(Number(item.price) || 0).toFixed(3)} €</td>
          <td>{item.category}</td>
        </tr>
      ))}
    </tbody>
  </table>

  <section class="legend">
    <h3>Leyenda de Precios</h3>
    <ul>
      <li><strong>Precios bajos:</strong> Entre el 40% y 60% del precio máximo del día.</li>
      <li><strong>Precios medios:</strong> Entre el 61% y 80% del precio máximo del día.</li>
      <li><strong>Precios altos:</strong> Entre el 81% y 100% del precio máximo del día.</li>
    </ul>
  </section>
</section>

<style>
  .hourly-prices {
    margin: 2rem 0;
    padding: 1rem;
    background: #f8f9fa;
    border-radius: 8px;
  }
  table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 1rem;
  }
  th, td {
    border: 1px solid #ddd;
    padding: 0.75rem;
    text-align: center;
  }
  th {
    background: #e2e8f0;
  }
  .legend ul {
    list-style: disc;
    margin-left: 1.5rem;
    font-size: 0.9rem;
  }
  .legend li {
    margin-bottom: 0.5rem;
  }
</style>
